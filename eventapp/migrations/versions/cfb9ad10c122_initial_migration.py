"""Initial migration

Revision ID: cfb9ad10c122
Revises: 
Create Date: 2025-07-20 21:02:31.232776

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cfb9ad10c122'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discount_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=False),
    sa.Column('user_group', sa.Enum('new', 'regular', 'vip', 'super_vip', name='customergroup'), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('used_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('discount_percentage >= 0 AND discount_percentage <= 100', name='valid_discount_percentage'),
    sa.CheckConstraint('valid_from <= valid_to', name='valid_from_before_valid_to'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('discount_codes', schema=None) as batch_op:
        batch_op.create_index('ix_discount_code_active', ['code', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_discount_codes_code'), ['code'], unique=True)

    op.create_table('translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('language', sa.String(length=5), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('translations', schema=None) as batch_op:
        batch_op.create_index('ix_translation_key_lang', ['key', 'language'], unique=False)
        batch_op.create_index(batch_op.f('ix_translations_key'), ['key'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'organizer', 'staff', 'customer', name='userrole'), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('total_spent', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('music', 'sports', 'seminar', 'conference', 'festival', 'workshop', 'party', 'competition', 'other', name='eventcategory'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location', sa.String(length=500), nullable=False),
    sa.Column('poster', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('start_time < end_time', name='start_time_before_end_time'),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index('ix_event_organizer', ['organizer_id'], unique=False)
        batch_op.create_index('ix_event_start_end', ['start_time', 'end_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_title'), ['title'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('momo', 'vnpay', name='paymentmethod'), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('transaction_id', sa.String(length=255), nullable=False),
    sa.Column('discount_code_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['discount_code_id'], ['discount_codes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index('ix_payment_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_payment_user_status', ['user_id', 'status'], unique=False)

    op.create_table('event_trending_logs',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('total_revenue', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('trending_score', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('interest_score', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    with op.batch_alter_table('event_trending_logs', schema=None) as batch_op:
        batch_op.create_index('ix_trending_event_last_updated', ['event_id', 'last_updated'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('ix_notification_event', ['event_id'], unique=False)
        batch_op.create_index('ix_notification_type', ['notification_type'], unique=False)

    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('parent_review_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='valid_rating'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['parent_review_id'], ['reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index('ix_review_event_user', ['event_id', 'user_id'], unique=False)
        batch_op.create_index('ix_review_parent', ['parent_review_id'], unique=False)

    op.create_table('ticket_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=9, scale=2), nullable=False),
    sa.Column('total_quantity', sa.Integer(), nullable=False),
    sa.Column('sold_quantity', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('price >= 0', name='price_non_negative'),
    sa.CheckConstraint('sold_quantity <= total_quantity', name='sold_not_exceed_total'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ticket_types', schema=None) as batch_op:
        batch_op.create_index('ix_ticket_type_event', ['event_id'], unique=False)

    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('ticket_type_id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('qr_code', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('is_checked_in', sa.Boolean(), nullable=False),
    sa.Column('check_in_date', sa.DateTime(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['ticket_type_id'], ['ticket_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.create_index('ix_ticket_qr_code', ['qr_code'], unique=False)
        batch_op.create_index('ix_ticket_type', ['ticket_type_id'], unique=False)
        batch_op.create_index('ix_ticket_user_event', ['user_id', 'event_id'], unique=False)

    op.create_table('user_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_email_sent', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'notification_id', name='unique_user_notification')
    )
    with op.batch_alter_table('user_notifications', schema=None) as batch_op:
        batch_op.create_index('ix_user_notification_user_notif', ['user_id', 'notification_id'], unique=False)
        batch_op.create_index('ix_user_notification_user_read', ['user_id', 'is_read'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_notifications', schema=None) as batch_op:
        batch_op.drop_index('ix_user_notification_user_read')
        batch_op.drop_index('ix_user_notification_user_notif')

    op.drop_table('user_notifications')
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.drop_index('ix_ticket_user_event')
        batch_op.drop_index('ix_ticket_type')
        batch_op.drop_index('ix_ticket_qr_code')

    op.drop_table('tickets')
    with op.batch_alter_table('ticket_types', schema=None) as batch_op:
        batch_op.drop_index('ix_ticket_type_event')

    op.drop_table('ticket_types')
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index('ix_review_parent')
        batch_op.drop_index('ix_review_event_user')

    op.drop_table('reviews')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('ix_notification_type')
        batch_op.drop_index('ix_notification_event')

    op.drop_table('notifications')
    with op.batch_alter_table('event_trending_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_trending_event_last_updated')

    op.drop_table('event_trending_logs')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('ix_payment_user_status')
        batch_op.drop_index('ix_payment_transaction_id')

    op.drop_table('payments')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_title'))
        batch_op.drop_index('ix_event_start_end')
        batch_op.drop_index('ix_event_organizer')

    op.drop_table('events')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('translations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_translations_key'))
        batch_op.drop_index('ix_translation_key_lang')

    op.drop_table('translations')
    with op.batch_alter_table('discount_codes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_discount_codes_code'))
        batch_op.drop_index('ix_discount_code_active')

    op.drop_table('discount_codes')
    # ### end Alembic commands ###
